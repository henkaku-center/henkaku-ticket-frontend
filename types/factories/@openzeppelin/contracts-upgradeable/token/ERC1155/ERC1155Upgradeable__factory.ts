/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Upgradeable,
  ERC1155UpgradeableInterface,
} from "../../../../../@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611533806100206000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610e1d565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610e60565b61023a565b60405190151581526020016100a9565b6100e86100e3366004610e84565b6102d5565b6040516100a99190610ee3565b610108610103366004611042565b610369565b005b61011d6101183660046110ec565b61040b565b6040516100a991906111f2565b610108610138366004611205565b610549565b6100c561014b366004611241565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205460ff1690565b610108610187366004611274565b610558565b60006001600160a01b03831661020f5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201527f616c6964206f776e65720000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5060008181526065602090815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b031982167fd9b67a2600000000000000000000000000000000000000000000000000000000148061029d57506001600160e01b031982167f0e89341c00000000000000000000000000000000000000000000000000000000145b8061023457507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b0319831614610234565b6060606780546102e4906112d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610310906112d9565b801561035d5780601f106103325761010080835404028352916020019161035d565b820191906000526020600020905b81548152906001019060200180831161034057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103855750610385853361014b565b6103f75760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206f7220617070726f7665640000000000000000000000000000000000006064820152608401610206565b61040485858585856105f3565b5050505050565b606081518351146104845760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860448201527f206d69736d6174636800000000000000000000000000000000000000000000006064820152608401610206565b6000835167ffffffffffffffff8111156104a0576104a0610ef6565b6040519080825280602002602001820160405280156104c9578160200160208202803683370190505b50905060005b8451811015610541576105148582815181106104ed576104ed611313565b602002602001015185838151811061050757610507611313565b602002602001015161018c565b82828151811061052657610526611313565b602090810291909101015261053a8161133f565b90506104cf565b509392505050565b610554338383610869565b5050565b6001600160a01b0385163314806105745750610574853361014b565b6105e65760405162461bcd60e51b815260206004820152602e60248201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60448201527f6572206f7220617070726f7665640000000000000000000000000000000000006064820152608401610206565b610404858585858561095d565b815183511461066a5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060448201527f6d69736d617463680000000000000000000000000000000000000000000000006064820152608401610206565b6001600160a01b0384166106ce5760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610206565b3360005b84518110156107fb5760008582815181106106ef576106ef611313565b60200260200101519050600085838151811061070d5761070d611313565b60209081029190910181015160008481526065835260408082206001600160a01b038e1683529093529190912054909150818110156107a15760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610206565b60008381526065602090815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906107e0908490611358565b92505081905550505050806107f49061133f565b90506106d2565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161084b92919061136b565b60405180910390a4610861818787878787610b0c565b505050505050565b816001600160a01b0316836001600160a01b0316036108f05760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360448201527f20666f722073656c6600000000000000000000000000000000000000000000006064820152608401610206565b6001600160a01b03838116600081815260666020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166109c15760405162461bcd60e51b815260206004820152602560248201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604482015264647265737360d81b6064820152608401610206565b3360006109cd85610cba565b905060006109da85610cba565b905060008681526065602090815260408083206001600160a01b038c16845290915290205485811015610a625760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60448201526939103a3930b739b332b960b11b6064820152608401610206565b60008781526065602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610aa1908490611358565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610b01848a8a8a8a8a610d05565b505050505050505050565b6001600160a01b0384163b156108615760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190610b509089908990889088908890600401611399565b6020604051808303816000875af1925050508015610b8b575060408051601f3d908101601f19168201909252610b88918101906113f7565b60015b610c4057610b97611414565b806308c379a003610bd05750610bab611430565b80610bb65750610bd2565b8060405162461bcd60e51b81526004016102069190610ee3565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560448201527f526563656976657220696d706c656d656e7465720000000000000000000000006064820152608401610206565b6001600160e01b0319811663bc197c8160e01b14610cb15760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610206565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610cf457610cf4611313565b602090810291909101015292915050565b6001600160a01b0384163b156108615760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610d4990899089908890889088906004016114ba565b6020604051808303816000875af1925050508015610d84575060408051601f3d908101601f19168201909252610d81918101906113f7565b60015b610d9057610b97611414565b6001600160e01b0319811663f23a6e6160e01b14610cb15760405162461bcd60e51b815260206004820152602860248201527f455243313135353a204552433131353552656365697665722072656a656374656044820152676420746f6b656e7360c01b6064820152608401610206565b80356001600160a01b0381168114610e1857600080fd5b919050565b60008060408385031215610e3057600080fd5b610e3983610e01565b946020939093013593505050565b6001600160e01b031981168114610e5d57600080fd5b50565b600060208284031215610e7257600080fd5b8135610e7d81610e47565b9392505050565b600060208284031215610e9657600080fd5b5035919050565b6000815180845260005b81811015610ec357602081850181015186830182015201610ea7565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610e7d6020830184610e9d565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610f3257610f32610ef6565b6040525050565b600067ffffffffffffffff821115610f5357610f53610ef6565b5060051b60200190565b600082601f830112610f6e57600080fd5b81356020610f7b82610f39565b604051610f888282610f0c565b83815260059390931b8501820192828101915086841115610fa857600080fd5b8286015b84811015610fc35780358352918301918301610fac565b509695505050505050565b600082601f830112610fdf57600080fd5b813567ffffffffffffffff811115610ff957610ff9610ef6565b604051611010601f8301601f191660200182610f0c565b81815284602083860101111561102557600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561105a57600080fd5b61106386610e01565b945061107160208701610e01565b9350604086013567ffffffffffffffff8082111561108e57600080fd5b61109a89838a01610f5d565b945060608801359150808211156110b057600080fd5b6110bc89838a01610f5d565b935060808801359150808211156110d257600080fd5b506110df88828901610fce565b9150509295509295909350565b600080604083850312156110ff57600080fd5b823567ffffffffffffffff8082111561111757600080fd5b818501915085601f83011261112b57600080fd5b8135602061113882610f39565b6040516111458282610f0c565b83815260059390931b850182019282810191508984111561116557600080fd5b948201945b8386101561118a5761117b86610e01565b8252948201949082019061116a565b965050860135925050808211156111a057600080fd5b506111ad85828601610f5d565b9150509250929050565b600081518084526020808501945080840160005b838110156111e7578151875295820195908201906001016111cb565b509495945050505050565b602081526000610e7d60208301846111b7565b6000806040838503121561121857600080fd5b61122183610e01565b91506020830135801515811461123657600080fd5b809150509250929050565b6000806040838503121561125457600080fd5b61125d83610e01565b915061126b60208401610e01565b90509250929050565b600080600080600060a0868803121561128c57600080fd5b61129586610e01565b94506112a360208701610e01565b93506040860135925060608601359150608086013567ffffffffffffffff8111156112cd57600080fd5b6110df88828901610fce565b600181811c908216806112ed57607f821691505b60208210810361130d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161135157611351611329565b5060010190565b8082018082111561023457610234611329565b60408152600061137e60408301856111b7565b828103602084015261139081856111b7565b95945050505050565b60006001600160a01b03808816835280871660208401525060a060408301526113c560a08301866111b7565b82810360608401526113d781866111b7565b905082810360808401526113eb8185610e9d565b98975050505050505050565b60006020828403121561140957600080fd5b8151610e7d81610e47565b600060033d111561142d5760046000803e5060005160e01c5b90565b600060443d101561143e5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561146e57505050505090565b82850191508151818111156114865750505050505090565b843d87010160208285010111156114a05750505050505090565b6114af60208286010187610f0c565b509095945050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526114f260a0830184610e9d565b97965050505050505056fea2646970667358221220308888566f67bb603b962fe63c7d5426a77f2fd476a2e1b046802642430fe0b264736f6c63430008110033";

type ERC1155UpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155UpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Upgradeable__factory extends ContractFactory {
  constructor(...args: ERC1155UpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Upgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC1155Upgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155Upgradeable {
    return super.attach(address) as ERC1155Upgradeable;
  }
  override connect(signer: Signer): ERC1155Upgradeable__factory {
    return super.connect(signer) as ERC1155Upgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155UpgradeableInterface {
    return new utils.Interface(_abi) as ERC1155UpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Upgradeable {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Upgradeable;
  }
}
